class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) return ans;

        Queue<TreeNode> q = new LinkedList<>();
        List<Integer> levelList = new ArrayList<>();
        boolean leftToRight = true;

        q.add(root);
        q.add(null);

        while (!q.isEmpty()) {
            TreeNode curr = q.poll();

            if (curr == null) {
                if (!leftToRight) {
                    Collections.reverse(levelList);
                }
                ans.add(new ArrayList<>(levelList));
                levelList.clear();

                if (!q.isEmpty()) {
                    q.add(null);
                }
                leftToRight = !leftToRight;
            } else {
                levelList.add(curr.val);

                if (curr.left != null) q.add(curr.left);
                if (curr.right != null) q.add(curr.right);
            }
        }

        return ans;
    }
}